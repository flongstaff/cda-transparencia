name: Deploy to Cloudflare Pages

on:
  # Trigger when GitHub Pages workflow completes successfully
  workflow_run:
    workflows: ["Deploy Transparency Portal to GitHub Pages", "Deploy to GitHub Pages (Custom Domain)"]  # Updated to match current workflow names
    types:
      - completed
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Updated to match other workflows
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          # Install Python dependencies
          pip install -r requirements_complete.txt
          
          # Install frontend dependencies
          cd frontend
          npm ci

      - name: Build
        run: |
          # Run data preprocessing
          python scripts/generate-data-index.py
          python scripts/transform-processed-data.py
          
          # Build frontend for production
          cd frontend
          npm run build:production  # Use production build for consistency
        env:
          NODE_ENV: production
          VITE_API_URL: "https://api.cda-transparencia.org"
          VITE_USE_API: "true"

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: cda-transparencia
          directory: frontend/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}