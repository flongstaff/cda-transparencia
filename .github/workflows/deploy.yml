name: Deploy to GitHub Pages and Cloudflare Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Weekly Sundays

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
        working-directory: frontend

      - name: Build frontend
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: production

      - name: Run Audits
        run: |
          cd scripts
          npm install axios
          node fetch-external.js
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          git add ../data/audit_results.json
          git commit -m "Auto-update audits" || echo "No changes"
          git push

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./frontend/dist
          cname: cda-transparencia.org
          enable_jekyll: false
          allow_empty_commit: false
          keep_files: false
          force_orphan: true

      - name: Prepare Cloudflare Pages deployment
        run: |
          # Copy built files to Cloudflare deployment directory
          mkdir -p cloudflare-deploy/public
          cp -r frontend/dist/* cloudflare-deploy/public/
          # Copy CNAME file for custom domain
          echo "cda-transparencia.org" > cloudflare-deploy/public/CNAME
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: cda-transparencia
          directory: cloudflare-deploy/public
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}