version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: transparency_portal_db
    environment:
      POSTGRES_DB: transparency_portal
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./database/backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d transparency_portal"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - transparency-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: transparency-backend
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: transparency_portal
      DB_USER: postgres
      DB_PASSWORD: postgres
      NODE_ENV: production
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/logs:/app/logs
      - ./data:/app/data
      - ./enhanced_audit_data:/app/enhanced_audit_data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - transparency-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: transparency-frontend
    environment:
      VITE_API_URL: http://localhost:3001/api
    ports:
      - "5173:5173"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    networks:
      - transparency-network

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /Users/flong/Developer/cda-transparencia/database/postgres-data
      o: bind

networks:
  transparency-network:
    driver: bridge