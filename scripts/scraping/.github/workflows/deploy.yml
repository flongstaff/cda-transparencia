name: Deploy Carmen de Areco Transparency Portal

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: transparency_portal
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          frontend/package-lock.json
          backend/package-lock.json

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Backend dependencies
      working-directory: ./backend
      run: npm ci

    - name: Install Frontend dependencies
      working-directory: ./frontend
      run: npm ci

    - name: Setup Database
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: transparency_portal
        DB_USER: postgres
        DB_PASSWORD: postgres
      run: |
        node src/populate-db.js

    - name: Build Frontend
      working-directory: ./frontend
      run: |
        npm run build

    - name: Verify System Integration
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_NAME: transparency_portal
        DB_USER: postgres
        DB_PASSWORD: postgres
      run: |
        node src/server.js &
        sleep 10
        curl -f http://localhost:3000/api/salaries || exit 1
        curl -f http://localhost:3000/api/tenders || exit 1
        curl -f http://localhost:3000/api/reports || exit 1
        curl -f http://localhost:3000/api/data-integrity || exit 1
